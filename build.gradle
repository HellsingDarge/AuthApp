buildscript {
    ext.kotlin_version = "1.3.71"
    ext.kotlinxcli_version = "0.2.1"
    ext.h2_version = "1.4.200"
    ext.flyway_verion = "6.3.2"
    ext.log4j2_version = "2.13.1"
    ext.spek_version = "2.0.10"
    ext.ktlint_version = "9.2.1"
    ext.mockk_version = "1.9.3"
    ext.detekt_version = "1.7.4"
}

plugins {
    id("org.jetbrains.kotlin.jvm") version("$kotlin_version")
    id("org.jlleitschuh.gradle.ktlint") version("$ktlint_version")
    id("io.gitlab.arturbosch.detekt").version("$detekt_version")
    id("jacoco")
}

group="ru.kafedrase.authapp"
version="1.3.1"
archivesBaseName="AuthApp"

kotlin {
    dependencies {
        implementation("org.jetbrains.kotlinx:kotlinx-cli:$kotlinxcli_version")
    }
}

dependencies {
    implementation("com.h2database:h2:$h2_version")
    implementation("org.flywaydb:flyway-core:$flyway_verion")
    implementation("org.apache.logging.log4j:log4j-api:$log4j2_version")
    implementation("org.apache.logging.log4j:log4j-core:$log4j2_version")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    testImplementation("org.spekframework.spek2:spek-dsl-jvm:$spek_version")
    testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spek_version")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("io.mockk:mockk:$mockk_version")
}

// maybe move to a more sophisticated solution (gradle plugin), rather than doing it manually?
jar {
    manifest {
        attributes("Main-Class": "ru.kafedrase.authapp.MainKt")
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    useJUnitPlatform {
        includeEngines("spek2")
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://kotlin.bintray.com/kotlinx"
    }
    jcenter()
}

processResources {
    from("src/main/kotlin") {
        include("resources/**")
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
detekt {
    toolVersion = "$detekt_version"                             // Version of the Detekt CLI that will be used. When unspecified the latest detekt version found will be used. Override to stay on the same version.
    input = files("src/main/kotlin")    // The directories where detekt looks for source files. Defaults to `files("src/main/java", "src/main/kotlin")`.
    parallel = false                                      // Builds the AST in parallel. Rules are always executed in parallel. Can lead to speedups in larger projects. `false` by default.
    config = files("$rootDir/detekt-config.yml")                   // Define the detekt configuration(s) you want to use. Defaults to the default detekt configuration.
    reports {
        txt {
            enabled = true                                // Enable/Disable TXT report (default: true)
            destination = file("build/reports/detekt.txt") // Path where TXT report will be stored (default: `build/reports/detekt/detekt.txt`)
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/jacoco")
}

tasks.jacocoTestReport {
    reports {
        html {
            enabled = true
        }
    }
}
